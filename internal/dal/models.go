// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.20.0

package dal

import (
	"github.com/google/uuid"
	"github.com/jackc/pgx/v5/pgtype"
)

type DirectusAccess struct {
	ID     uuid.UUID   `json:"id"`
	Role   uuid.UUID   `json:"role"`
	User   uuid.UUID   `json:"user"`
	Policy uuid.UUID   `json:"policy"`
	Sort   pgtype.Int4 `json:"sort"`
}

type DirectusActivity struct {
	ID         int32              `json:"id"`
	Action     string             `json:"action"`
	User       uuid.UUID          `json:"user"`
	Timestamp  pgtype.Timestamptz `json:"timestamp"`
	Ip         pgtype.Text        `json:"ip"`
	UserAgent  pgtype.Text        `json:"userAgent"`
	Collection string             `json:"collection"`
	Item       string             `json:"item"`
	Comment    pgtype.Text        `json:"comment"`
	Origin     pgtype.Text        `json:"origin"`
}

type DirectusCollection struct {
	Collection            string      `json:"collection"`
	Icon                  pgtype.Text `json:"icon"`
	Note                  pgtype.Text `json:"note"`
	DisplayTemplate       pgtype.Text `json:"displayTemplate"`
	Hidden                bool        `json:"hidden"`
	Singleton             bool        `json:"singleton"`
	Translations          []byte      `json:"translations"`
	ArchiveField          pgtype.Text `json:"archiveField"`
	ArchiveAppFilter      bool        `json:"archiveAppFilter"`
	ArchiveValue          pgtype.Text `json:"archiveValue"`
	UnarchiveValue        pgtype.Text `json:"unarchiveValue"`
	SortField             pgtype.Text `json:"sortField"`
	Accountability        pgtype.Text `json:"accountability"`
	Color                 pgtype.Text `json:"color"`
	ItemDuplicationFields []byte      `json:"itemDuplicationFields"`
	Sort                  pgtype.Int4 `json:"sort"`
	Group                 pgtype.Text `json:"group"`
	Collapse              string      `json:"collapse"`
	PreviewUrl            pgtype.Text `json:"previewUrl"`
	Versioning            bool        `json:"versioning"`
}

type DirectusComment struct {
	ID          uuid.UUID          `json:"id"`
	Collection  string             `json:"collection"`
	Item        string             `json:"item"`
	Comment     string             `json:"comment"`
	DateCreated pgtype.Timestamptz `json:"dateCreated"`
	DateUpdated pgtype.Timestamptz `json:"dateUpdated"`
	UserCreated uuid.UUID          `json:"userCreated"`
	UserUpdated uuid.UUID          `json:"userUpdated"`
}

type DirectusDashboard struct {
	ID          uuid.UUID          `json:"id"`
	Name        string             `json:"name"`
	Icon        string             `json:"icon"`
	Note        pgtype.Text        `json:"note"`
	DateCreated pgtype.Timestamptz `json:"dateCreated"`
	UserCreated uuid.UUID          `json:"userCreated"`
	Color       pgtype.Text        `json:"color"`
}

type DirectusExtension struct {
	Enabled bool      `json:"enabled"`
	ID      uuid.UUID `json:"id"`
	Folder  string    `json:"folder"`
	Source  string    `json:"source"`
	Bundle  uuid.UUID `json:"bundle"`
}

type DirectusField struct {
	ID                int32       `json:"id"`
	Collection        string      `json:"collection"`
	Field             string      `json:"field"`
	Special           pgtype.Text `json:"special"`
	Interface         pgtype.Text `json:"interface"`
	Options           []byte      `json:"options"`
	Display           pgtype.Text `json:"display"`
	DisplayOptions    []byte      `json:"displayOptions"`
	Readonly          bool        `json:"readonly"`
	Hidden            bool        `json:"hidden"`
	Sort              pgtype.Int4 `json:"sort"`
	Width             pgtype.Text `json:"width"`
	Translations      []byte      `json:"translations"`
	Note              pgtype.Text `json:"note"`
	Conditions        []byte      `json:"conditions"`
	Required          pgtype.Bool `json:"required"`
	Group             pgtype.Text `json:"group"`
	Validation        []byte      `json:"validation"`
	ValidationMessage pgtype.Text `json:"validationMessage"`
}

type DirectusFile struct {
	ID               uuid.UUID          `json:"id"`
	Storage          string             `json:"storage"`
	FilenameDisk     pgtype.Text        `json:"filenameDisk"`
	FilenameDownload string             `json:"filenameDownload"`
	Title            pgtype.Text        `json:"title"`
	Type             pgtype.Text        `json:"type"`
	Folder           uuid.UUID          `json:"folder"`
	UploadedBy       uuid.UUID          `json:"uploadedBy"`
	CreatedOn        pgtype.Timestamptz `json:"createdOn"`
	ModifiedBy       uuid.UUID          `json:"modifiedBy"`
	ModifiedOn       pgtype.Timestamptz `json:"modifiedOn"`
	Charset          pgtype.Text        `json:"charset"`
	Filesize         pgtype.Int8        `json:"filesize"`
	Width            pgtype.Int4        `json:"width"`
	Height           pgtype.Int4        `json:"height"`
	Duration         pgtype.Int4        `json:"duration"`
	Embed            pgtype.Text        `json:"embed"`
	Description      pgtype.Text        `json:"description"`
	Location         pgtype.Text        `json:"location"`
	Tags             pgtype.Text        `json:"tags"`
	Metadata         []byte             `json:"metadata"`
	FocalPointX      pgtype.Int4        `json:"focalPointX"`
	FocalPointY      pgtype.Int4        `json:"focalPointY"`
	TusID            pgtype.Text        `json:"tusId"`
	TusData          []byte             `json:"tusData"`
	UploadedOn       pgtype.Timestamptz `json:"uploadedOn"`
}

type DirectusFlow struct {
	ID             uuid.UUID          `json:"id"`
	Name           string             `json:"name"`
	Icon           pgtype.Text        `json:"icon"`
	Color          pgtype.Text        `json:"color"`
	Description    pgtype.Text        `json:"description"`
	Status         string             `json:"status"`
	Trigger        pgtype.Text        `json:"trigger"`
	Accountability pgtype.Text        `json:"accountability"`
	Options        []byte             `json:"options"`
	Operation      uuid.UUID          `json:"operation"`
	DateCreated    pgtype.Timestamptz `json:"dateCreated"`
	UserCreated    uuid.UUID          `json:"userCreated"`
}

type DirectusFolder struct {
	ID     uuid.UUID `json:"id"`
	Name   string    `json:"name"`
	Parent uuid.UUID `json:"parent"`
}

type DirectusMigration struct {
	Version   string             `json:"version"`
	Name      string             `json:"name"`
	Timestamp pgtype.Timestamptz `json:"timestamp"`
}

type DirectusNotification struct {
	ID         int32              `json:"id"`
	Timestamp  pgtype.Timestamptz `json:"timestamp"`
	Status     pgtype.Text        `json:"status"`
	Recipient  uuid.UUID          `json:"recipient"`
	Sender     uuid.UUID          `json:"sender"`
	Subject    string             `json:"subject"`
	Message    pgtype.Text        `json:"message"`
	Collection pgtype.Text        `json:"collection"`
	Item       pgtype.Text        `json:"item"`
}

type DirectusOperation struct {
	ID          uuid.UUID          `json:"id"`
	Name        pgtype.Text        `json:"name"`
	Key         string             `json:"key"`
	Type        string             `json:"type"`
	PositionX   int32              `json:"positionX"`
	PositionY   int32              `json:"positionY"`
	Options     []byte             `json:"options"`
	Resolve     uuid.UUID          `json:"resolve"`
	Reject      uuid.UUID          `json:"reject"`
	Flow        uuid.UUID          `json:"flow"`
	DateCreated pgtype.Timestamptz `json:"dateCreated"`
	UserCreated uuid.UUID          `json:"userCreated"`
}

type DirectusPanel struct {
	ID          uuid.UUID          `json:"id"`
	Dashboard   uuid.UUID          `json:"dashboard"`
	Name        pgtype.Text        `json:"name"`
	Icon        pgtype.Text        `json:"icon"`
	Color       pgtype.Text        `json:"color"`
	ShowHeader  bool               `json:"showHeader"`
	Note        pgtype.Text        `json:"note"`
	Type        string             `json:"type"`
	PositionX   int32              `json:"positionX"`
	PositionY   int32              `json:"positionY"`
	Width       int32              `json:"width"`
	Height      int32              `json:"height"`
	Options     []byte             `json:"options"`
	DateCreated pgtype.Timestamptz `json:"dateCreated"`
	UserCreated uuid.UUID          `json:"userCreated"`
}

type DirectusPermission struct {
	ID          int32       `json:"id"`
	Collection  string      `json:"collection"`
	Action      string      `json:"action"`
	Permissions []byte      `json:"permissions"`
	Validation  []byte      `json:"validation"`
	Presets     []byte      `json:"presets"`
	Fields      pgtype.Text `json:"fields"`
	Policy      uuid.UUID   `json:"policy"`
}

type DirectusPolicy struct {
	ID          uuid.UUID   `json:"id"`
	Name        string      `json:"name"`
	Icon        string      `json:"icon"`
	Description pgtype.Text `json:"description"`
	IpAccess    pgtype.Text `json:"ipAccess"`
	EnforceTfa  bool        `json:"enforceTfa"`
	AdminAccess bool        `json:"adminAccess"`
	AppAccess   bool        `json:"appAccess"`
}

type DirectusPreset struct {
	ID              int32       `json:"id"`
	Bookmark        pgtype.Text `json:"bookmark"`
	User            uuid.UUID   `json:"user"`
	Role            uuid.UUID   `json:"role"`
	Collection      pgtype.Text `json:"collection"`
	Search          pgtype.Text `json:"search"`
	Layout          pgtype.Text `json:"layout"`
	LayoutQuery     []byte      `json:"layoutQuery"`
	LayoutOptions   []byte      `json:"layoutOptions"`
	RefreshInterval pgtype.Int4 `json:"refreshInterval"`
	Filter          []byte      `json:"filter"`
	Icon            pgtype.Text `json:"icon"`
	Color           pgtype.Text `json:"color"`
}

type DirectusRelation struct {
	ID                    int32       `json:"id"`
	ManyCollection        string      `json:"manyCollection"`
	ManyField             string      `json:"manyField"`
	OneCollection         pgtype.Text `json:"oneCollection"`
	OneField              pgtype.Text `json:"oneField"`
	OneCollectionField    pgtype.Text `json:"oneCollectionField"`
	OneAllowedCollections pgtype.Text `json:"oneAllowedCollections"`
	JunctionField         pgtype.Text `json:"junctionField"`
	SortField             pgtype.Text `json:"sortField"`
	OneDeselectAction     string      `json:"oneDeselectAction"`
}

type DirectusRevision struct {
	ID         int32       `json:"id"`
	Activity   int32       `json:"activity"`
	Collection string      `json:"collection"`
	Item       string      `json:"item"`
	Data       []byte      `json:"data"`
	Delta      []byte      `json:"delta"`
	Parent     pgtype.Int4 `json:"parent"`
	Version    uuid.UUID   `json:"version"`
}

type DirectusRole struct {
	ID          uuid.UUID   `json:"id"`
	Name        string      `json:"name"`
	Icon        string      `json:"icon"`
	Description pgtype.Text `json:"description"`
	Parent      uuid.UUID   `json:"parent"`
}

type DirectusSession struct {
	Token     string             `json:"token"`
	User      uuid.UUID          `json:"user"`
	Expires   pgtype.Timestamptz `json:"expires"`
	Ip        pgtype.Text        `json:"ip"`
	UserAgent pgtype.Text        `json:"userAgent"`
	Share     uuid.UUID          `json:"share"`
	Origin    pgtype.Text        `json:"origin"`
	NextToken pgtype.Text        `json:"nextToken"`
}

type DirectusSetting struct {
	ID                            int32       `json:"id"`
	ProjectName                   string      `json:"projectName"`
	ProjectUrl                    pgtype.Text `json:"projectUrl"`
	ProjectColor                  string      `json:"projectColor"`
	ProjectLogo                   uuid.UUID   `json:"projectLogo"`
	PublicForeground              uuid.UUID   `json:"publicForeground"`
	PublicBackground              uuid.UUID   `json:"publicBackground"`
	PublicNote                    pgtype.Text `json:"publicNote"`
	AuthLoginAttempts             pgtype.Int4 `json:"authLoginAttempts"`
	AuthPasswordPolicy            pgtype.Text `json:"authPasswordPolicy"`
	StorageAssetTransform         pgtype.Text `json:"storageAssetTransform"`
	StorageAssetPresets           []byte      `json:"storageAssetPresets"`
	CustomCss                     pgtype.Text `json:"customCss"`
	StorageDefaultFolder          uuid.UUID   `json:"storageDefaultFolder"`
	Basemaps                      []byte      `json:"basemaps"`
	MapboxKey                     pgtype.Text `json:"mapboxKey"`
	ModuleBar                     []byte      `json:"moduleBar"`
	ProjectDescriptor             pgtype.Text `json:"projectDescriptor"`
	DefaultLanguage               string      `json:"defaultLanguage"`
	CustomAspectRatios            []byte      `json:"customAspectRatios"`
	PublicFavicon                 uuid.UUID   `json:"publicFavicon"`
	DefaultAppearance             string      `json:"defaultAppearance"`
	DefaultThemeLight             pgtype.Text `json:"defaultThemeLight"`
	ThemeLightOverrides           []byte      `json:"themeLightOverrides"`
	DefaultThemeDark              pgtype.Text `json:"defaultThemeDark"`
	ThemeDarkOverrides            []byte      `json:"themeDarkOverrides"`
	ReportErrorUrl                pgtype.Text `json:"reportErrorUrl"`
	ReportBugUrl                  pgtype.Text `json:"reportBugUrl"`
	ReportFeatureUrl              pgtype.Text `json:"reportFeatureUrl"`
	PublicRegistration            bool        `json:"publicRegistration"`
	PublicRegistrationVerifyEmail bool        `json:"publicRegistrationVerifyEmail"`
	PublicRegistrationRole        uuid.UUID   `json:"publicRegistrationRole"`
	PublicRegistrationEmailFilter []byte      `json:"publicRegistrationEmailFilter"`
}

type DirectusShare struct {
	ID          uuid.UUID          `json:"id"`
	Name        pgtype.Text        `json:"name"`
	Collection  string             `json:"collection"`
	Item        string             `json:"item"`
	Role        uuid.UUID          `json:"role"`
	Password    pgtype.Text        `json:"password"`
	UserCreated uuid.UUID          `json:"userCreated"`
	DateCreated pgtype.Timestamptz `json:"dateCreated"`
	DateStart   pgtype.Timestamptz `json:"dateStart"`
	DateEnd     pgtype.Timestamptz `json:"dateEnd"`
	TimesUsed   pgtype.Int4        `json:"timesUsed"`
	MaxUses     pgtype.Int4        `json:"maxUses"`
}

type DirectusTranslation struct {
	ID       uuid.UUID `json:"id"`
	Language string    `json:"language"`
	Key      string    `json:"key"`
	Value    string    `json:"value"`
}

type DirectusUser struct {
	ID                  uuid.UUID          `json:"id"`
	FirstName           pgtype.Text        `json:"firstName"`
	LastName            pgtype.Text        `json:"lastName"`
	Email               pgtype.Text        `json:"email"`
	Password            pgtype.Text        `json:"password"`
	Location            pgtype.Text        `json:"location"`
	Title               pgtype.Text        `json:"title"`
	Description         pgtype.Text        `json:"description"`
	Tags                []byte             `json:"tags"`
	Avatar              uuid.UUID          `json:"avatar"`
	Language            pgtype.Text        `json:"language"`
	TfaSecret           pgtype.Text        `json:"tfaSecret"`
	Status              string             `json:"status"`
	Role                uuid.UUID          `json:"role"`
	Token               pgtype.Text        `json:"token"`
	LastAccess          pgtype.Timestamptz `json:"lastAccess"`
	LastPage            pgtype.Text        `json:"lastPage"`
	Provider            string             `json:"provider"`
	ExternalIdentifier  pgtype.Text        `json:"externalIdentifier"`
	AuthData            []byte             `json:"authData"`
	EmailNotifications  pgtype.Bool        `json:"emailNotifications"`
	Appearance          pgtype.Text        `json:"appearance"`
	ThemeDark           pgtype.Text        `json:"themeDark"`
	ThemeLight          pgtype.Text        `json:"themeLight"`
	ThemeLightOverrides []byte             `json:"themeLightOverrides"`
	ThemeDarkOverrides  []byte             `json:"themeDarkOverrides"`
}

type DirectusVersion struct {
	ID          uuid.UUID          `json:"id"`
	Key         string             `json:"key"`
	Name        pgtype.Text        `json:"name"`
	Collection  string             `json:"collection"`
	Item        string             `json:"item"`
	Hash        pgtype.Text        `json:"hash"`
	DateCreated pgtype.Timestamptz `json:"dateCreated"`
	DateUpdated pgtype.Timestamptz `json:"dateUpdated"`
	UserCreated uuid.UUID          `json:"userCreated"`
	UserUpdated uuid.UUID          `json:"userUpdated"`
	Delta       []byte             `json:"delta"`
}

type DirectusWebhook struct {
	ID                         int32     `json:"id"`
	Name                       string    `json:"name"`
	Method                     string    `json:"method"`
	Url                        string    `json:"url"`
	Status                     string    `json:"status"`
	Data                       bool      `json:"data"`
	Actions                    string    `json:"actions"`
	Collections                string    `json:"collections"`
	Headers                    []byte    `json:"headers"`
	WasActiveBeforeDeprecation bool      `json:"wasActiveBeforeDeprecation"`
	MigratedFlow               uuid.UUID `json:"migratedFlow"`
}

type Order struct {
	ID        uuid.UUID        `json:"id"`
	UserID    uuid.UUID        `json:"userId"`
	ProductID uuid.UUID        `json:"productId"`
	Quantity  int32            `json:"quantity"`
	Total     pgtype.Numeric   `json:"total"`
	CreatedAt pgtype.Timestamp `json:"createdAt"`
}

type Product struct {
	ID          uuid.UUID        `json:"id"`
	Name        string           `json:"name"`
	Description pgtype.Text      `json:"description"`
	Price       pgtype.Numeric   `json:"price"`
	CreatedAt   pgtype.Timestamp `json:"createdAt"`
}

type SchemaMigration struct {
	Version string `json:"version"`
}

type User struct {
	ID        uuid.UUID        `json:"id"`
	Name      string           `json:"name"`
	Email     string           `json:"email"`
	Password  string           `json:"password"`
	CreatedAt pgtype.Timestamp `json:"createdAt"`
}
